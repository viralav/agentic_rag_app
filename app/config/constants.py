from typing import Final
import os
from dotenv import load_dotenv

load_dotenv()

# app
MICROSOFT_APP_TYPE: Final = 'MICROSOFT_APP_TYPE'
MICROSOFT_TENANT_ID: Final = 'MICROSOFT_TENANT_ID'
MICROSOFT_APP_ID: Final = 'MICROSOFT_APP_ID'
MICROSOFT_APP_SECRET: Final = 'MICROSOFT_APP_SECRET'

#blob
BLOB_ACCOUNT_NAME: Final = 'BLOB_ACCOUNT_NAME'
BLOB_ACCOUNT_KEY: Final = 'BLOB_ACCOUNT_KEY'
BLOB_CONTAINER_NAME: Final = 'BLOB_CONTAINER_NAME'

# open-ai
OPEN_AI_BASE_URL: Final = 'OPEN_AI_BASE_URL'
OPEN_AI_KEY: Final = 'OPEN_AI_KEY'
OPEN_AI_DEPLOYMENT_NAME: Final = 'OPEN_AI_DEPLOYMENT_NAME'
OPEN_AI_VERSION: Final = 'OPEN_AI_VERSION'
OPENAI_INTERACTION_LIST: Final = 'OPENAI_INTERACTION_LIST'

# dalle.e-3 
OPEN_AI_DALLE_DEPLOYMENT_NAME: Final = 'OPEN_AI_DALLE_DEPLOYMENT_NAME'

#cosmos
COSMOS_HOST: Final = 'COSMOS_HOST'
COSMOS_KEY: Final = 'COSMOS_KEY'
COSMOS_DATABASE: Final = 'COSMOS_DATABASE'
COSMOS_USER_INTERACTIONS_CONTAINER: Final = 'COSMOS_USER_INTERACTIONS_CONTAINER'
COSMOS_IMAGES_INFO_CONTAINER: Final = 'COSMOS_IMAGES_INFO_CONTAINER'
COSMOS_REPLY_TO_ID_CONTAINER: Final = 'COSMOS_REPLY_TO_ID_CONTAINER'

#application_insights
APP_INSIGHTS_KEY: Final = 'APP_INSIGHTS_KEY'

#log_level
LOG_LEVEL: Final = 'LOG_LEVEL'

#adaptive-cards
IMAGE_EXPIRY_ICON: Final = 'IMAGE_NOTIFICATION_ICON'
IMAGE_EXPIRY_MESSAGE: Final = 'IMAGE_EXPIRY_MESSAGE'

# Azure Search
FIELDS_ID: Final = "id"
FIELDS_CONTENT: Final = "content"
FIELDS_CONTENT_VECTOR: Final = "content_vector"
FIELDS_METADATA: Final = "filename"
FIELDS_URL: Final = "url"
FIELDS_IMAGE: Final = "images"
FIELDS_HEADER: Final = "header"
FIELDS_SQL_EXAMPLE_VECTOR: Final = "sql_examples_vector"
FIELDS_SQL_UNIQUE_VALUES_VECTOR: Final = "column_value_vector"
FIELDS_VALUES_TABLE_DESCR: Final = "table_info"
FIELDS_METADATA_UPLOAD: Final = "metadata"
FIELDS_METADATA_UPLOAD_SOURCE: Final = "filename"
FIELDS_USER_ID: Final = "aad_object_id"
AZURE_SEARCH_SERVICE_ENDPOINT: Final = os.getenv("AZURE_SEARCH_SERVICE_ENDPOINT")
AZURE_SEARCH_ADMIN_KEY: Final = os.getenv("AZURE_SEARCH_ADMIN_KEY")
AZURE_OPENAI_GPT4o_MODEL: Final = "gpt-4o"
UPLOAD_INDEX: Final = os.getenv("UPLOAD_INDEX", "dev-common")


# langchain
OPEN_AI_TEMPERATURE: Final = os.getenv("OPEN_AI_TEMPERATURE", 0.2)
OPEN_AI_MAX_TOKENS: Final = os.getenv("OPEN_AI_MAX_TOKENS", 2000)
OPEN_AI_EMBEDDING_DEPLOYED_MODEL: Final = os.getenv("OPEN_AI_EMBEDDING_DEPLOYED_MODEL", "embedding-large")
OPEN_AI_SHAREPOINT_PROMPT_EN: Final = """
"""

SELECT_DOCUMENT_COUNT: Final = os.getenv("SELECT_DOCUMENT_COUNT", 4)
ENTITY_INDEX_LIST =  ["dev-common", "dev"]

# bot config
TOP_CHAT_HISTORY: Final = int(os.getenv("TOP_CHAT_HISTORY", 1))